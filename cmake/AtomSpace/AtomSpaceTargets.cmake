# Generated by CMake 3.5.1

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget atomproto atombase atomcore execution lambda clearbox atomspace atomspaceutils atomutils attentionbank query dist-gearman persist sql-support persist-pg persist-sql ruleengine truthvalue unify smob logger randgen PythonEval PythonSCM)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target atomproto
add_library(atomproto SHARED IMPORTED)

# Create imported target atombase
add_library(atombase SHARED IMPORTED)

# Create imported target atomcore
add_library(atomcore SHARED IMPORTED)

# Create imported target execution
add_library(execution SHARED IMPORTED)

# Create imported target lambda
add_library(lambda SHARED IMPORTED)

# Create imported target clearbox
add_library(clearbox SHARED IMPORTED)

# Create imported target atomspace
add_library(atomspace SHARED IMPORTED)

# Create imported target atomspaceutils
add_library(atomspaceutils SHARED IMPORTED)

# Create imported target atomutils
add_library(atomutils SHARED IMPORTED)

# Create imported target attentionbank
add_library(attentionbank SHARED IMPORTED)

# Create imported target query
add_library(query SHARED IMPORTED)

# Create imported target dist-gearman
add_library(dist-gearman SHARED IMPORTED)

# Create imported target persist
add_library(persist SHARED IMPORTED)

# Create imported target sql-support
add_library(sql-support SHARED IMPORTED)

# Create imported target persist-pg
add_library(persist-pg SHARED IMPORTED)

# Create imported target persist-sql
add_library(persist-sql SHARED IMPORTED)

# Create imported target ruleengine
add_library(ruleengine SHARED IMPORTED)

# Create imported target truthvalue
add_library(truthvalue SHARED IMPORTED)

# Create imported target unify
add_library(unify SHARED IMPORTED)

# Create imported target smob
add_library(smob SHARED IMPORTED)

# Create imported target logger
add_library(logger SHARED IMPORTED)

# Create imported target randgen
add_library(randgen SHARED IMPORTED)

# Create imported target PythonEval
add_library(PythonEval SHARED IMPORTED)

# Create imported target PythonSCM
add_library(PythonSCM SHARED IMPORTED)

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/AtomSpaceTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
